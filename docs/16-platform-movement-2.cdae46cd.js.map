{"mappings":"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","sources":["./src/16-platform-movement-2/index.js"],"sourcesContent":["const DEBUG = false;\nconst COLORS = {\n    BEIGE: '#fcf0c0',\n    ORANGE: '#ef8f4f',\n    YELLOW: '#f8d803',\n    GREEN: '#8dc267',\n    LIGHT_BLUE: '#66dcfe',\n    BLUE: '#49a0e1',\n    PURPLE: '#b399c9',\n    SOFT_RED: '#fcc0cc',\n    SOFT_YELLOW: '#fcf0c0',\n    SOFT_CYAN: '#c0fcf0',\n    SOFT_BLUE: '#c0ccfc',\n    WHITE: '#ffffff',\n    BLACK: '#000000',\n    SOFT_BLACK: '#333'\n};\n\nconst DIRECTION = {\n    TOP: 'top',\n    RIGHT: 'right',\n    BOTTOM: 'bottom',\n    LEFT: 'left'\n};\n\nconst DIRECTION_HORIZONTAL = [DIRECTION.LEFT, DIRECTION.RIGHT];\nconst DIRECTION_VERTICAL = [DIRECTION.TOP, DIRECTION.BOTTOM];\n\n\nconst keyboard = {\n    left: false,\n    right: false,\n    up: false,\n    down: false,\n    space: false\n}\n\nconst maxVelocity = (limit, ...args) => {\n    return args.reduce((highest, number) => {\n        if ((number <= limit) && (number > highest)) {\n            return number;\n        }\n\n        return highest;\n    }, args[0]);\n}\n\nconst checkAABB = (objectA, objectB) => {\n    const top = objectB.y > objectA.y + objectA.height;\n    const bottom = objectB.y + objectB.height < objectA.y;\n    const right = objectB.x + objectB.width < objectA.x;\n    const left = objectB.x > objectA.x + objectA.width;\n\n    // if any of (top, right, bottom, left) is true, then there is no collision because\n    // one edge is far away from the other\n    return !(top || right || bottom || left);\n}\n\nconst distance = (player, target) => {\n    return {\n        top: player.y - (target.y + target.height),\n        right: target.x - (player.x + player.width),\n        bottom: target.y - (player.y + player.height),\n        left: player.x - (target.x + target.width)\n    }\n}\n\nconst getObjectDimensions = ({ x, y, width, height, xVelocity, yVelocity }) => {\n    return {\n        x: x - xVelocity,\n        y: y - yVelocity,\n        width: xVelocity + width + xVelocity,\n        height: yVelocity + height + yVelocity\n    }\n};\n\nconst findNearbyObjects = (player, objects) => {\n    const playerDimensions = getObjectDimensions(player);\n\n    return objects.filter((object) => {\n        return checkAABB(playerDimensions, object)\n    });\n}\n\nconst getCollisionDirection = (offset) => {\n    let side = DIRECTION.TOP, value = offset.top;\n    [DIRECTION.RIGHT, DIRECTION.BOTTOM, DIRECTION.LEFT].forEach((direction) => {\n        if (offset[direction] < value) {\n            value = offset[direction];\n            side = direction;\n        }\n    });\n\n    return { direction: side, value };\n}\n\nconst closest = (scene, player, objects) => {\n    const map = {\n        top: { objects: [], distance: {} },\n        right: { objects: [], distance: {} },\n        bottom: { objects: [], distance: {} },\n        left: { objects: [], distance: {} }\n    };\n\n    const insertIfCloser = (object, offset, direction) => {\n        if (offset[direction] < 0) {\n            return;\n        }\n\n        const closestDistance = map[direction].distance;\n\n        // either current object's distance is same as the closest object found so far OR\n        // the closest object does not exist in a list yet\n        if (offset[direction] === closestDistance[direction] || !map[direction].objects.length) {\n            map[direction].objects.push(object);\n            map[direction].distance = offset;\n        } else if (offset[direction] < closestDistance[direction]) {\n            // found closer object\n            map[direction].objects = [object];\n            map[direction].distance = offset;\n        }\n    }\n\n    objects.forEach((object) => {\n        const offset = distance(player, object);\n\n        if (checkAABB(player.raycast.horizontal, object)) {\n            insertIfCloser(object, offset, DIRECTION.LEFT);\n            insertIfCloser(object, offset, DIRECTION.RIGHT);\n        } else if (checkAABB(player.raycast.vertical, object)) {\n            insertIfCloser(object, offset, DIRECTION.TOP);\n            insertIfCloser(object, offset, DIRECTION.BOTTOM);\n        }\n    });\n\n    return map;\n}\n\n\nclass Raycast {\n    constructor() {\n        this.color = COLORS.BLACK;\n        this.horizontal = {x: 0, y: 0, width: 0, height: 0, color: this.color};\n        this.vertical = {x: 0, y: 0, width: 0, height: 0, color: this.color};\n    }\n\n    update(scene, target) {\n        this.horizontal = {\n            ...this.horizontal,\n            x: 0,\n            y: target.y,\n            width: scene.canvas.width,\n            height: target.height\n        };\n\n        this.vertical = {\n            ...this.vertical,\n            x: target.x,\n            y: 0,\n            width: target.width,\n            height: scene.canvas.height\n        };\n    }\n\n    render(scene) {\n        if (!DEBUG) {\n            return;\n        }\n\n        for (const object of [this.horizontal, this.vertical]) {\n            scene.lineWidth = \"1\";\n            scene.strokeStyle = object.color;\n            scene.strokeRect(object.x, object.y, object.width, object.height);\n        }\n    }\n}\n\nclass Player {\n    constructor(x, y, width, height, color) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.color = color;\n        this.baseXVelocity = 8;\n        this.baseYVelocity = 20;\n        this.xVelocity = this.baseXVelocity;\n        this.yVelocity = this.baseYVelocity;\n        this.lastLog = {};\n        this.raycast = new Raycast();\n        this.direction = null;\n\n        // jump\n        this.isJumping = false;\n        this.gravity = 1;\n        this.jumpPower = 12;\n        this.isOnGround = true;\n        this.jumpVelocity = 60;\n        this.jumperSpeedY = 0;\n    }\n\n    log(...args) {\n        const serialized = JSON.stringify(...args);\n        if (serialized !== this.lastLog) {\n            this.lastLog = serialized;\n            console.log(...args);\n        }\n    }\n\n    moveLeft(velocity) {\n        this.x -= velocity;\n        this.direction = DIRECTION.LEFT;\n    }\n\n    moveRight(velocity) {\n        this.x += velocity;\n        this.direction = DIRECTION.RIGHT;\n    }\n\n    moveUp(velocity) {\n        this.y -= velocity;\n        this.direction = DIRECTION.TOP;\n    }\n\n    moveDown(velocity) {\n        this.y += velocity;\n        this.direction = DIRECTION.BOTTOM;\n    }\n\n    update(scene, objects) {\n        const closestObjects = closest(scene, this, objects);\n\n        const velocity = {\n            top: closestObjects.top.distance.top === undefined ? this.baseYVelocity : Math.min(this.baseYVelocity, closestObjects.top.distance.top - 1),\n            right: closestObjects.right.distance.right === undefined ? this.baseXVelocity : Math.min(this.baseXVelocity, closestObjects.right.distance.right - 1),\n            bottom: closestObjects.bottom.distance.bottom === undefined ? this.baseYVelocity : Math.min(this.baseYVelocity, closestObjects.bottom.distance.bottom - 1),\n            left: closestObjects.left.distance.left === undefined ? this.baseXVelocity : Math.min(this.baseXVelocity, closestObjects.left.distance.left - 1)\n        };\n\n        this.log(velocity.top);\n\n        //////////////////////////////////////// movement\n        if (keyboard.right) {\n            this.moveRight(velocity.right);\n        }\n\n        if (keyboard.left) {\n            this.moveLeft(velocity.left);\n        }\n\n        if (keyboard.down) {\n            this.moveDown(velocity.bottom);\n        }\n\n        // jump movement\n        if (velocity.bottom > 0) {\n            this.isOnGround = false;\n        }\n\n        if (velocity.bottom <= 0) {\n            this.isOnGround = true;\n            this.yVelocity = this.gravity;\n        }\n\n        // start jump movement\n        if (keyboard.space && this.isOnGround) {\n            this.yVelocity = Math.max(-this.baseYVelocity, -velocity.top);\n        }\n\n        // when off the ground, decrease yVelocity over time\n        if (!this.isOnGround) {\n            // this.yVelocity *= 0.9; // resistance\n            // eventually yVelocity will become positive number because of applied gravity\n            // which will cause player to move into opposite direction (down)\n            this.yVelocity = this.yVelocity * 0.9 + this.gravity;\n\n            // update player direction\n            if (this.yVelocity > 0) {\n                this.direction = DIRECTION.BOTTOM;\n            } else if (this.yVelocity < 0) {\n                this.direction = DIRECTION.TOP;\n            }\n        }\n\n        // move player (top or down)\n        // calculate player y position. respect max bottom and top velocity.\n        if (this.direction !== DIRECTION.TOP) {\n            // moving down\n            this.y += Math.min(this.yVelocity, velocity.bottom);\n        } else if (this.direction !== DIRECTION.BOTTOM) {\n            // moving up\n            this.y += Math.max(this.yVelocity, -velocity.top);\n        }\n\n        /////////////////////////////////////// scene boundaries\n        // top boundary\n         if (this.y < 0) {\n            this.y = 0;\n        }\n\n         // right boundary\n        if (this.x + this.width > scene.canvas.width) {\n            this.x = scene.canvas.width - this.width;\n        }\n\n         // left boundary\n         if (this.x < 0) {\n             this.x = 0;\n         }\n\n        // bottom boundary\n        if ((this.height + this.y) > scene.canvas.height) {\n            this.y = scene.canvas.height - this.height;\n        }\n\n        this.raycast.update(scene, this);\n    }\n\n    render(scene) {\n        scene.fillStyle = this.color;\n        scene.fillRect(this.x, this.y, this.width, this.height);\n        scene.fillStyle = 'rgba(0, 0, 0, 1)';\n        scene.font = '12px monospace';\n        scene.fillText(`${this.x},${this.y}`, this.x, this.y);\n        this.raycast.render(scene);\n    }\n}\n\nclass Thing {\n    constructor(name, x, y, width, height, color) {\n        this.name = name;\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.color = color;\n        this.originalColor = color;\n    }\n\n    update() {}\n\n    render(scene) {\n        scene.fillStyle = this.color;\n        scene.fillRect(this.x, this.y, this.width, this.height);\n        scene.fillStyle = 'rgba(0, 0, 0, 1)';\n        scene.font = '12px monospace';\n        scene.fillText(this.name, this.x, this.y);\n    }\n}\n\n\nconst canvas = document.getElementById(\"canvas\");\nconst scene = canvas.getContext(\"2d\");\n\n\nconst objects = [\n    // ground\n    new Thing('ground', 0, canvas.height - 80, canvas.width, 80, COLORS.PURPLE),\n\n    // obstacles\n    new Thing('box', 500, canvas.height - 120, 40, 40, COLORS.ORANGE),\n    new Thing('box-1', 100, canvas.height - 160, 40, 40, COLORS.ORANGE),\n    new Thing('platform', 200, canvas.height - 160, 40, 10, COLORS.YELLOW),\n    new Thing('box-2', 350, canvas.height - 200, 120, 40, COLORS.ORANGE),\n\n    new Player(canvas.width / 2, canvas.height - 180, 20, 20, COLORS.GREEN)\n];\n\nconst handleKeyDownPress = (event) => {\n    switch (event.key) {\n        case 'ArrowUp':\n            keyboard.up = true;\n            break;\n\n        case 'ArrowLeft':\n            keyboard.left = true;\n            break;\n\n        case 'ArrowDown':\n            keyboard.down = true;\n            break;\n\n        case 'ArrowRight':\n            keyboard.right = true;\n            break;\n\n        case ' ':\n            if (!keyboard.space) {\n                keyboard.space = true;\n            }\n            break;\n\n        default:\n            break;\n    }\n}\n\nconst handleKeyUpPress = (event) => {\n    switch (event.key) {\n        case 'ArrowUp':\n            keyboard.up = false;\n            break;\n\n        case 'ArrowLeft':\n            keyboard.left = false;\n            break;\n\n        case 'ArrowDown':\n            keyboard.down = false;\n            break;\n\n        case 'ArrowRight':\n            keyboard.right = false;\n            break;\n\n        case ' ':\n            keyboard.space = false;\n            break;\n\n        default:\n            break;\n    }\n};\n\n\ndocument.addEventListener('keydown', handleKeyDownPress);\ndocument.addEventListener('keyup', handleKeyUpPress);\n\n\nfunction draw() {\n    requestAnimationFrame(draw);\n\n    scene.clearRect(0, 0, canvas.width, canvas.height);\n\n    for (const object of objects) {\n        object.update(scene, objects.filter(current => current !== object));\n        object.render(scene);\n    }\n}\n\ndraw();\n"],"names":["DEBUG","COLORS","BEIGE","ORANGE","YELLOW","GREEN","LIGHT_BLUE","BLUE","PURPLE","SOFT_RED","SOFT_YELLOW","SOFT_CYAN","SOFT_BLUE","WHITE","BLACK","SOFT_BLACK","DIRECTION","TOP","RIGHT","BOTTOM","LEFT","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","keyboard","left","right","up","down","space","checkAABB","objectA","objectB","top","y","height","bottom","x","width","distance","player","target","closest","scene","objects","map","insertIfCloser","object","offset","direction","closestDistance","length","push","forEach","raycast","horizontal","vertical","Raycast","constructor","color","update","canvas","render","lineWidth","strokeStyle","strokeRect","Player","baseXVelocity","baseYVelocity","xVelocity","yVelocity","lastLog","isJumping","gravity","jumpPower","isOnGround","jumpVelocity","jumperSpeedY","log","args","serialized","JSON","stringify","console","moveLeft","velocity","moveRight","moveUp","moveDown","closestObjects","undefined","Math","min","max","fillStyle","fillRect","font","fillText","Thing","name","originalColor","document","getElementById","getContext","handleKeyDownPress","event","key","handleKeyUpPress","addEventListener","draw","requestAnimationFrame","clearRect","filter","current"],"version":3,"file":"16-platform-movement-2.cdae46cd.js.map"}