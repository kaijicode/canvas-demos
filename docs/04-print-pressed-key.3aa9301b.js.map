{"mappings":"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","sources":["./src/04-print-pressed-key/index.js"],"sourcesContent":["/**\n    actualBoundingBoxAscent: 30\n    actualBoundingBoxDescent: 9\n    actualBoundingBoxLeft: 23.08203125\n    actualBoundingBoxRight: 23\n    width: 48.1640625\n */\nconst canvas = document.getElementById('canvas');\nconst scene = canvas.getContext('2d');\n\nconst keyboard = () => {\n    const keyPressedState = {\n        right: false,\n        left: false,\n        up: false,\n        down: false,\n        spacebar: false,\n    }\n\n    const keyEventHandler = (event, isPressed) => {\n        switch (event.key) {\n            case 'Right':\n            case 'ArrowRight': {\n                keyPressedState.right = isPressed;\n                break;\n            }\n\n            case 'Left':\n            case 'ArrowLeft': {\n                keyPressedState.left = isPressed;\n                break;\n            }\n\n            case 'Up':\n            case 'ArrowUp':\n                keyPressedState.up = isPressed;\n                break;\n\n            case 'Down':\n            case 'ArrowDown':\n                keyPressedState.down = isPressed;\n                break;\n\n            case ' ':\n            case 'Spacebar':\n                keyPressedState.spacebar = isPressed;\n                break;\n\n            default:\n                break;\n\n    }\n    }\n\n    const handleKeyDownPress = (event) => {\n        // log(`handleKeyDownPress: ${event.key}`);\n        keyEventHandler(event, true);\n    }\n\n    const handleKeyUpPress = (event) => {\n        // log(`handleKeyUpPress: ${event.key}`);\n        keyEventHandler(event, false);\n    };\n\n    document.addEventListener('keydown', handleKeyDownPress);\n    document.addEventListener('keyup', handleKeyUpPress);\n\n    return keyPressedState;\n}\nconst keyPressed = keyboard();\n\nfunction draw() {\n    requestAnimationFrame(draw);\n\n    const fontSize = 32;\n    const defaultColor = '#9E9E9E';\n    const keyPressedColor = '#9C27B0';\n\n    scene.font = `${fontSize}px Arial`;\n\n    scene.fillStyle = keyPressed.up ? keyPressedColor : defaultColor;\n    scene.fillText('Up', 0, fontSize);\n\n    scene.fillStyle = keyPressed.right ? keyPressedColor : defaultColor;\n    scene.fillText('Right', 0, fontSize * 2);\n\n    scene.fillStyle = keyPressed.down ? keyPressedColor : defaultColor;\n    scene.fillText('Down', 0, fontSize * 3);\n\n    scene.fillStyle = keyPressed.left ? keyPressedColor : defaultColor;\n    scene.fillText('Left', 0, fontSize * 4);\n\n    scene.fillStyle = keyPressed.spacebar ? keyPressedColor : defaultColor;\n    scene.fillText('Space', 0, fontSize * 5);\n}\n\ndraw();"],"names":["canvas","document","getElementById","scene","getContext","keyboard","keyPressedState","right","left","up","down","spacebar","keyEventHandler","event","isPressed","key","handleKeyDownPress","handleKeyUpPress","addEventListener","keyPressed","draw","requestAnimationFrame","fontSize","defaultColor","keyPressedColor","font","fillStyle","fillText"],"version":3,"file":"04-print-pressed-key.3aa9301b.js.map"}