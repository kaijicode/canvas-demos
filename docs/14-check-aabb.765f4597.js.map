{"mappings":"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","sources":["./src/14-check-aabb/index.js"],"sourcesContent":["const COLORS = {\n    BEIGE: '#fcf0c0',\n    ORANGE: '#ef8f4f',\n    YELLOW: '#f8d803',\n    GREEN: '#8dc267',\n    LIGHT_BLUE: '#66dcfe',\n    BLUE: '#49a0e1',\n    PURPLE: '#b399c9',\n    SOFT_RED: '#fcc0cc',\n    SOFT_YELLOW: '#fcf0c0',\n    SOFT_CYAN: '#c0fcf0',\n    SOFT_BLUE: '#c0ccfc'\n};\n\nconst keyboard = {\n    left: false,\n    right: false,\n    up: false,\n    down: false,\n    space: false\n}\n\nconst checkAABB = (objectA, objectB) => {\n    const top = objectB.y > objectA.y + objectA.height;\n    const bottom = objectB.y + objectB.height < objectA.y;\n    const right = objectB.x + objectB.width < objectA.x;\n    const left = objectB.x > objectA.x + objectA.width;\n\n    // if any of (top, right, bottom, left) is true, then there is no collision because\n    // one edge is far away from the other\n    return !(top || right || bottom || left);\n}\n\nclass Player {\n    constructor(x, y, width, height, color) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.color = color;\n        this.baseXVelocity = 8;\n        this.baseYVelocity = this.baseXVelocity;\n        this.xVelocity = this.baseXVelocity;\n        this.yVelocity = this.baseYVelocity;\n        this.lastLog = {};\n    }\n\n    log(...args) {\n        const serialized = JSON.stringify(...args);\n        if (serialized !== this.lastLog) {\n            this.lastLog = serialized;\n            console.log(...args);\n        }\n    }\n\n    moveLeft(velocity) {\n        this.x -= velocity;\n    }\n\n    moveRight(velocity) {\n        this.x += velocity;\n    }\n\n    moveUp(velocity) {\n        this.y -= velocity;\n    }\n\n    moveDown(velocity) {\n        this.y += velocity;\n    }\n\n    update(scene, objects) {\n        for (const object of objects) {\n            object.unmark();\n            if (checkAABB(this, object)) {\n                object.mark();\n            }\n        }\n\n        //////////////////////////////////////// movement\n        if (keyboard.right) {\n            this.moveRight(this.baseXVelocity);\n        }\n\n        if (keyboard.left) {\n            this.moveLeft(this.baseXVelocity);\n        }\n\n        if (keyboard.up) {\n            this.moveUp(this.baseYVelocity);\n        }\n\n        if (keyboard.down) {\n            this.moveDown(this.baseYVelocity);\n        }\n\n\n        /////////////////////////////////////// scene boundaries\n        // top boundary\n         if (this.y < 0) {\n            this.y = 0;\n        }\n\n         // right boundary\n        if (this.x + this.width > scene.canvas.width) {\n            this.x = scene.canvas.width - this.width;\n        }\n\n         // left boundary\n         if (this.x < 0) {\n             this.x = 0;\n         }\n\n        // bottom boundary\n        if ((this.height + this.y) > scene.canvas.height) {\n            this.y = scene.canvas.height - this.height;\n        }\n    }\n\n    render(scene) {\n        scene.fillStyle = this.color;\n        scene.fillRect(this.x, this.y, this.width, this.height);\n        scene.fillStyle = 'rgba(0, 0, 0, 1)';\n        scene.font = '12px monospace';\n        scene.fillText(`${this.x},${this.y}`, this.x, this.y);\n    }\n}\n\nclass Thing {\n    constructor(name, x, y, width, height, color) {\n        this.name = name;\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.color = color;\n        this.originalColor = color;\n    }\n\n    update() {}\n\n    render(scene) {\n        scene.fillStyle = this.color;\n        scene.fillRect(this.x, this.y, this.width, this.height);\n        scene.fillStyle = 'rgba(0, 0, 0, 1)';\n        scene.font = '12px monospace';\n        scene.fillText(this.name, this.x, this.y);\n    }\n\n    isInside = (n, min, max) => {\n        // TODO: or > and <?\n        return (n > min) && (n < max);\n    }\n\n    // AABB - axis aligned bounding boxes\n    checkCollision(object) {\n        let collision = { top: false, right: false, bottom: false, left: false };\n\n        const topOverlap = this.isInside(object.y, this.y, this.y + this.height);\n        const leftOverlap = this.isInside(object.x, this.x, this.x + this.width);\n        const bottomOverlap = this.isInside(object.y + object.height, this.y, this.y + this.height);\n        const rightOverlap = this.isInside(object.x + object.width, this.x, this.x + this.width);\n\n        const leftOrRightOverlap = leftOverlap || rightOverlap;\n        const topOrBottomOverlap = topOverlap || bottomOverlap;\n\n        if (topOverlap && leftOrRightOverlap) {\n            collision = { ...collision, top: true };\n        }\n\n        if (bottomOverlap && leftOrRightOverlap) {\n            collision = { ...collision, bottom: true };\n        }\n\n        if (leftOverlap && topOrBottomOverlap) {\n            collision = { ...collision, left: true };\n        }\n\n        if (rightOverlap && topOrBottomOverlap) {\n            collision = { ...collision, right: true };\n        }\n\n        return {\n            ...collision,\n            target: {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            }\n        };\n    }\n\n    checkAABB(object) {\n        // my way\n        const top = object.y > this.y + this.height;\n        const bottom = object.y + object.height < this.y;\n        const right = object.x + object.width < this.x;\n        const left = object.x > this.x + this.width;\n\n        // if any of (top, right, bottom, left) is true, then there is no collision because\n        // one edge is far away from the other\n        return !(top || right || bottom || left);\n\n        // const left = object.y\n\n        // if any of (top, right, bottom, left) is true, then there is no collision because\n        // one edge is far away from the other\n        // return ;\n    }\n\n    checkAABB2(player) {\n        return (\n            (player.y < this.y + this.height) && (player.y + player.height > this.y) &&\n            (player.x < this.x + this.width) && (player.x + player.width > this.x)\n        )\n    }\n\n    distance(object) {\n        // return {\n        //     top: object.y - (this.y + this.height),\n        //     bottom: this.y - (object.y + object.height),\n        //     right: this.x - (object.x + object.width),\n        //     left: object.x - (this.x + this.width)\n        // }\n\n        return {\n            top: object.y - (this.y + this.height),\n            bottom: this.y - (object.y + object.height),\n            right: this.x - (object.x + object.width),\n            left: object.x - (this.x + this.width)\n        }\n    }\n\n    mark() {\n        this.color = COLORS.YELLOW;\n    }\n\n    unmark() {\n        this.color = this.originalColor;\n    }\n}\n\nconst canvas = document.getElementById(\"canvas\");\nconst scene = canvas.getContext(\"2d\");\n\nconst player = new Player(canvas.width / 2, canvas.height - 20, 20, 20, '#8dc267');\nconst box4 = new Thing('box-4', 240, canvas.height - 220, 40, 40, '#b399c9');\nconst box7 = new Thing('box-7', 340, canvas.height - 250, 15, 15, '#b399c9');\n\nconst objects = [\n    box4,\n    box7,\n    player,\n    // platform1,\n    // platform2\n\n];\n\nconst handleKeyDownPress = (event) => {\n    switch (event.key) {\n        case 'ArrowUp':\n            keyboard.up = true;\n            break;\n\n        case 'ArrowLeft':\n            keyboard.left = true;\n            break;\n\n        case 'ArrowDown':\n            keyboard.down = true;\n            break;\n\n        case 'ArrowRight':\n            keyboard.right = true;\n            break;\n\n        case ' ':\n            if (!keyboard.space) {\n                keyboard.space = true;\n            }\n            break;\n\n        default:\n            break;\n    }\n}\n\nconst handleKeyUpPress = (event) => {\n    switch (event.key) {\n        case 'ArrowUp':\n            keyboard.up = false;\n            break;\n\n        case 'ArrowLeft':\n            keyboard.left = false;\n            break;\n\n        case 'ArrowDown':\n            keyboard.down = false;\n            break;\n\n        case 'ArrowRight':\n            keyboard.right = false;\n            break;\n\n        case ' ':\n            keyboard.space = false;\n            break;\n\n        default:\n            break;\n    }\n};\n\n\ndocument.addEventListener('keydown', handleKeyDownPress);\ndocument.addEventListener('keyup', handleKeyUpPress);\n\n\nfunction draw() {\n    requestAnimationFrame(draw);\n\n    scene.clearRect(0, 0, canvas.width, canvas.height);\n\n    for (const object of objects) {\n        object.update(scene, objects.filter(current => current !== object));\n        object.render(scene);\n    }\n}\n\ndraw();\n"],"names":["COLORS","BEIGE","ORANGE","YELLOW","GREEN","LIGHT_BLUE","BLUE","PURPLE","SOFT_RED","SOFT_YELLOW","SOFT_CYAN","SOFT_BLUE","keyboard","left","right","up","down","space","checkAABB","objectA","objectB","top","y","height","bottom","x","width","Player","constructor","color","baseXVelocity","baseYVelocity","xVelocity","yVelocity","lastLog","log","args","serialized","JSON","stringify","console","moveLeft","velocity","moveRight","moveUp","moveDown","update","scene","objects","object","unmark","mark","canvas","render","fillStyle","fillRect","font","fillText","Thing","name","originalColor","isInside","n","min","max","checkCollision","collision","topOverlap","leftOverlap","bottomOverlap","rightOverlap","leftOrRightOverlap","topOrBottomOverlap","target","checkAABB2","player","distance","document","getElementById","getContext","box4","box7","handleKeyDownPress","event","key","handleKeyUpPress","addEventListener","draw","requestAnimationFrame","clearRect","filter","current"],"version":3,"file":"14-check-aabb.765f4597.js.map"}