{"mappings":"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","sources":["./src/01-ball-collision/index.js"],"sourcesContent":["const canvas = document.getElementById(\"canvas\");\nconst ctx = canvas.getContext(\"2d\");\nconst colors = [\n    '#f44336',\n    '#E91E63',\n    '#9C27B0',\n    '#673AB7',\n    '#3F51B5',\n    '#2196F3',\n    '#03A9F4',\n    '#00BCD4',\n    '#009688',\n    '#4CAF50',\n    '#8BC34A',\n    '#CDDC39',\n    '#FFEB3B',\n    '#FFC107',\n    '#FF9800',\n    '#FF5722',\n    '#795548',\n    '#9E9E9E',\n    '#607D8B',\n];\n\nconst balls = new Array(20).fill(null).map((x, index) => {\n    return createBall(\n        randomBetween(canvas.width * 0.1, canvas.width * 0.9),\n        randomBetween(canvas.height * 0.1, canvas.height * 0.9),\n        10, // radius\n        // {x: randomBetween(-2, 2), y: randomBetween(-2, 2)},\n        randomItem([\n            {x: 1, y: 1},\n            {x: 2, y: 2},\n            {x: 3, y: 3},\n            {x: -1, y: -1},\n            {x: -2, y: -2},\n            {x: -3, y: -3},\n        ]),\n        colors[randomBetween(0, colors.length-1)]\n    );\n});\n\nfunction randomItem(items) {\n    return items[randomBetween(0, items.length-1)];\n}\n\nfunction createBall(x, y, radius, speed, color = \"#0095DD\") {\n    return {x, y, radius, speed, color};\n}\n\n// random between min (inclusive) and max (inclusive)\nfunction randomBetween(min, max) {\n    return Math.floor((Math.random() * ((max+1) - min))) + min;\n}\n\nfunction drawBall(ball) {\n    ctx.beginPath();\n    ctx.arc(ball.x, ball.y, ball.radius, 0, Math.PI*2);\n    ctx.fillStyle = ball.color;\n    ctx.fill();\n    ctx.closePath();\n}\n\nfunction detectWallCollision(ball) {\n    const collision = {x: ball.speed.x, y: ball.speed.y};\n\n    if (ball.y - ball.radius <= 0 || ball.y + ball.radius >= canvas.height) {\n        collision.y = -collision.y;\n    }\n\n    // if collides with left wall or right wall\n    if (ball.x + ball.radius >= canvas.width || ball.x - ball.radius <= 0) {\n        collision.x = -collision.x;\n    }\n\n    return collision;\n}\n\nfunction applyCollision(ball, collision) {\n    ball.speed = {...ball.speed, ...collision};\n    ball.x += ball.speed.x;\n    ball.y += ball.speed.y;\n}\n\nfunction detectBallCollision(first, second) {\n    const collision = {first: {}, second: {}};\n\n    const distance = Math.sqrt((first.x - second.x)**2 + (first.y - second.y)**2);\n    const isCollided = distance < first.radius + second.radius;\n\n    if (!isCollided) {\n        return collision;\n    }\n\n    // second hits first from left\n    const isLeftCollision = second.x + second.radius >= first.x - first.radius;\n\n    // second hits first from right\n    const isRightCollision = second.x - second.radius <= first.x + first.radius;\n\n    // second hits first from top\n    const isTopCollision = second.y + second.radius >= first.y - first.radius;\n\n    // second hits first from bottom\n    const isBottomCollision = second.y - second.radius <= first.y + first.radius;\n\n\n    if (isTopCollision || isBottomCollision) {\n        collision.isCollision = true;\n        collision.first.y = -first.speed.y;\n        collision.second.y = -second.speed.y;\n    }\n\n    if (isRightCollision || isLeftCollision) {\n        collision.isCollision = true;\n        collision.first.x = -first.speed.x;\n        collision.second.x = -second.speed.x;\n    }\n\n    return collision;\n}\n\nfunction draw() {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    for (let i = 0; i < balls.length; i += 1) {\n        const ball = balls[i];\n        drawBall(ball);\n        applyCollision(ball, detectWallCollision(ball));\n\n        for (let j = 0; j < balls.length; j += 1) {\n            if (i !== j && j+1 < balls.length) {\n                const nextBall = balls[j];\n                const ballCollision = detectBallCollision(ball, nextBall);\n\n                if (ballCollision.isCollision) {\n                    applyCollision(ball, ballCollision.first);\n                    applyCollision(nextBall, ballCollision.second);\n                }\n            }\n        }\n    }\n\n    // balls.forEach((ball) => {\n    //     drawBall(ball);\n    //     applyCollision(ball, detectWallCollision(ball));\n    // });\n\n    requestAnimationFrame(draw);\n}\n\ndraw();"],"names":["canvas","document","getElementById","ctx","getContext","colors","balls","Array","fill","map","x","index","createBall","randomBetween","width","height","randomItem","y","length","items","radius","speed","color","min","max","Math","floor","random","drawBall","ball","beginPath","arc","PI","fillStyle","closePath","detectWallCollision","collision","applyCollision","detectBallCollision","first","second","distance","sqrt","isCollided","isLeftCollision","isRightCollision","isTopCollision","isBottomCollision","isCollision","draw","clearRect","i","j","nextBall","ballCollision","requestAnimationFrame"],"version":3,"file":"01-ball-collision.abd33324.js.map"}