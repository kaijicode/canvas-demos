{"mappings":"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","sources":["./src/canvas.js","./src/08-game-of-life/index.js"],"sourcesContent":["export function newCanvas(width, height, background, target = document.body) {\n    const canvas = document.createElement('canvas');\n    canvas.setAttribute('width', width);\n    canvas.setAttribute('height', height);\n    canvas.style.background = background;\n    target.appendChild(canvas);\n\n    return {\n        canvas,\n        scene: canvas.getContext('2d')\n    };\n}\n\nexport function clearScene(scene, canvas) {\n    scene.clearRect(0, 0, canvas.width, canvas.height);\n}","import {newCanvas} from \"../canvas\";\n\n\nconst CELL_SIZE = 5;\nconst WORLD_SIZE = 128;\nconst REDRAW_EVERY_MS = 100;\nconst STATUS = {DEAD: 0, ALIVE: 1};\n\n\nconst getRandomStatus = () => {\n    return Math.floor(Math.random() * 2) === 0 ? STATUS.DEAD : STATUS.ALIVE;\n}\n\nclass Cell {\n    constructor(status, row, column) {\n        this.width = CELL_SIZE;\n        this.height = CELL_SIZE;\n        this.row = row;\n        this.column = column;\n        this.status = status;\n    }\n\n    isAlive() {\n        return this.status === STATUS.ALIVE;\n    }\n\n    isDead() {\n        return this.status === STATUS.DEAD\n    }\n\n    die() {\n        this.status = STATUS.DEAD;\n    }\n\n    live() {\n        this.status = STATUS.ALIVE;\n    }\n\n    getNeighbors(world) {\n        const positionOffset = [\n            // top\n            {row: -1, column: 0},\n\n            // right\n            {row: 0, column: 1},\n\n            // bottom\n            {row: 1, column: 0},\n\n            // left\n            {row: 0, column: -1},\n\n            // top-left\n            {row: -1, column: -1},\n\n            // top-right\n            {row: -1, column: 1},\n\n            // bottom-left\n            {row: 1, column: -1},\n\n            // bottom-right\n            {row: 1, column: 1}\n        ];\n\n        return positionOffset.map((offset) => {\n            return world?.[this.row + offset.row]?.[this.column + offset.column];\n        }).filter((neighbor) => neighbor !== undefined);\n    }\n\n    clone() {\n        return new Cell(this.status, this.row, this.column);\n    }\n\n    draw(scene, x, y) {\n        scene.fillStyle = this.isAlive() ? '#000' : '#fff';\n        scene.fillRect(x, y, this.width, this.height);\n    }\n}\n\nclass Game {\n    constructor(size, cell) {\n        this.generation = 0;\n        this.size = size;\n        this.cell = cell;\n        this.world = this._create();\n    }\n\n    _create() {\n        const world = [];\n\n        for (let i = 0; i < this.size; i += 1) {\n            const group = [];\n            for (let j = 0; j < this.size; j += 1) {\n                group.push(new this.cell(getRandomStatus(), i, j));\n            }\n            world.push(group);\n        }\n        return world;\n    }\n\n    play() {\n        this.world = this.world.map((row) => {\n            return row.map((cell) => {\n                const neighbors = cell.getNeighbors(this.world).filter((neighbor) => neighbor.isAlive());\n                const aliveNeighborsCount = neighbors.length;\n                const clone = cell.clone();\n\n                if (cell.isAlive() && (aliveNeighborsCount === 2 || aliveNeighborsCount === 3)) {\n                    // survived\n                } else if (cell.isDead() && aliveNeighborsCount === 3) {\n                    clone.live();\n                } else {\n                    clone.die();\n                }\n\n                return clone\n            });\n        });\n\n        this.generation += 1;\n    }\n\n    draw(scene) {\n        for (let y = 0; y < this.size; y += 1) {\n            for (let x = 0; x < this.size; x += 1) {\n                const cell = this.world[x][y];\n                cell.draw(scene, x * cell.width, y * cell.height)\n            }\n        }\n    }\n}\n\n\nconst { scene } = newCanvas(WORLD_SIZE * CELL_SIZE, WORLD_SIZE * CELL_SIZE, '#fff');\nconst game = new Game(WORLD_SIZE, Cell);\n\nconst render = () => {\n    game.play();\n    game.draw(scene);\n}\n\n// generation=0\ngame.draw(scene);\n\nlet start = performance.now();\nlet elapsed = 0;\n\nconst draw = () => {\n    requestAnimationFrame(draw);\n\n    // time elapsed between renders\n    elapsed = elapsed + (performance.now() - start)\n    start = performance.now();\n\n    if (elapsed >= REDRAW_EVERY_MS) {\n        console.log(`elapsed=${elapsed}ms`);\n        render();\n        elapsed = 0;\n    }\n}\ndraw();\n\n"],"names":["newCanvas","width","height","background","target","document","body","canvas","createElement","setAttribute","style","appendChild","scene","getContext","CELL_SIZE","WORLD_SIZE","REDRAW_EVERY_MS","STATUS","DEAD","ALIVE","getRandomStatus","Math","floor","random","Cell","constructor","status","row","column","isAlive","isDead","die","live","getNeighbors","world","positionOffset","map","offset","filter","neighbor","undefined","clone","draw","x","y","fillStyle","fillRect","Game","size","cell","generation","_create","i","group","j","push","play","neighbors","aliveNeighborsCount","length","game","render","start","performance","now","elapsed","requestAnimationFrame","console","log"],"version":3,"file":"08-game-of-life.b55daea0.js.map"}