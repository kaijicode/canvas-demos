{"mappings":"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","sources":["./src/13-platformer-closest-objects/index.js"],"sourcesContent":["const COLORS = {\n    BEIGE: '#fcf0c0',\n    ORANGE: '#ef8f4f',\n    YELLOW: '#f8d803',\n    GREEN: '#8dc267',\n    LIGHT_BLUE: '#66dcfe',\n    BLUE: '#49a0e1',\n    PURPLE: '#b399c9',\n    SOFT_RED: '#fcc0cc',\n    SOFT_YELLOW: '#fcf0c0',\n    SOFT_CYAN: '#c0fcf0',\n    SOFT_BLUE: '#c0ccfc'\n};\n\nconst DIRECTION = {\n    TOP: 'top',\n    RIGHT: 'right',\n    BOTTOM: 'bottom',\n    LEFT: 'left'\n};\n\nconst DIRECTION_HORIZONTAL = [DIRECTION.LEFT, DIRECTION.RIGHT];\nconst DIRECTION_VERTICAL = [DIRECTION.TOP, DIRECTION.BOTTOM];\n\nconst sum = (arr) => {\n    return arr.reduce((total, x) => total + x, 0)\n}\n\nconst keyboard = {\n    left: false,\n    right: false,\n    up: false,\n    down: false,\n    space: false\n}\n\nconst checkAABB = (objectA, objectB) => {\n    const top = objectB.y > objectA.y + objectA.height;\n    const bottom = objectB.y + objectB.height < objectA.y;\n    const right = objectB.x + objectB.width < objectA.x;\n    const left = objectB.x > objectA.x + objectA.width;\n\n    // if any of (top, right, bottom, left) is true, then there is no collision because\n    // one edge is far away from the other\n    return !(top || right || bottom || left);\n}\n\nconst distance = (player, target) => {\n    return {\n        top: player.y - (target.y + target.height),\n        right: target.x - (player.x + player.width),\n        bottom: target.y - (player.y + player.height),\n        left: player.x - (target.x + target.width)\n    }\n}\n\nconst getObjectDimensions = ({ x, y, width, height, xVelocity, yVelocity }) => {\n    return {\n        x: x - xVelocity,\n        y: y - yVelocity,\n        width: xVelocity + width + xVelocity,\n        height: yVelocity + height + yVelocity\n    }\n};\n\n\nconst findNearbyObjects = (player, objects) => {\n    const playerDimensions = getObjectDimensions(player);\n\n    return objects.filter((object) => {\n        return checkAABB(playerDimensions, object)\n    });\n}\n\nconst getCollisionDirection = (offset) => {\n    let side = DIRECTION.TOP, value = offset.top;\n    [DIRECTION.RIGHT, DIRECTION.BOTTOM, DIRECTION.LEFT].forEach((direction) => {\n        if (offset[direction] < value) {\n            value = offset[direction];\n            side = direction;\n        }\n    });\n\n    return { direction: side, value };\n}\n\nconst groupClosestObjectsByLocation = (player, objects) => {\n    const map = {\n        top: { objects: [], distance: {} },\n        right: { objects: [], distance: {} },\n        bottom: { objects: [], distance: {} },\n        left: { objects: [], distance: {} }\n    };\n\n    const insertIfCloser = (object, offset, direction) => {\n        if (offset[direction] < 0) {\n            return;\n        }\n\n        const closestDistance = map[direction].distance;\n\n        // either current object's distance is same as the closest object found so far OR\n        // the closest object does not exist in a list yet\n        if (offset[direction] === closestDistance[direction] || !map[direction].objects.length) {\n            map[direction].objects.push(object);\n            map[direction].distance = offset;\n        } else if (offset[direction] < closestDistance[direction]) {\n            // found closer object\n            map[direction].objects = [object];\n            map[direction].distance = offset;\n        }\n    }\n\n    objects.forEach((object) => {\n        const offset = distance(player, object);\n\n        // TODO\n        // collision is triggered on the same object twice\n        // when checking top-bottom and when checking left-right\n        // insertIfCloser(object, offset, 'top');\n        // insertIfCloser(object, offset, 'right');\n        // insertIfCloser(object, offset, 'bottom');\n        // insertIfCloser(object, offset, 'left');\n\n\n        // if (offset.top >= 0 || offset.bottom >= 0) {\n        //     insertIfCloser(object, offset, 'top');\n        //     insertIfCloser(object, offset, 'bottom');\n        // } else if (offset.left >= 0 || offset.right >= 0) {\n        //     insertIfCloser(object, offset, 'right');\n        //     insertIfCloser(object, offset, 'left');\n        // }\n\n\n        // if (offset.top >= 0) {\n        //     insertIfCloser(object, offset, 'top');\n        // } else if (offset.right >= 0) {\n        //     insertIfCloser(object, offset, 'right');\n        // } else if (offset.bottom >= 0) {\n        //     insertIfCloser(object, offset, 'bottom');\n        // } else if (offset.left >= 0) {\n        //     insertIfCloser(object, offset, 'left');\n        // }\n\n        // determine WHERE the collision occurs:\n        // is it horizontal collision?\n            // is it left or right?\n        // is it vertical collision?\n            // is it top or down?\n\n\n        const collision = getCollisionDirection(offset);\n\n        if (DIRECTION_HORIZONTAL.includes(collision.direction)) {\n            insertIfCloser(object, offset, 'left');\n            insertIfCloser(object, offset, 'right');\n        } else if (DIRECTION_VERTICAL.includes(collision.direction)) {\n            insertIfCloser(object, offset, 'top');\n            insertIfCloser(object, offset, 'bottom');\n        }\n    });\n\n    return map;\n}\n\n\nconst closest = (scene, player, objects) => {\n    // const { vertical: verticalRay, horizontal: horizontalRay } = raycast(scene, player);\n    const map = {\n        top: { objects: [], distance: {} },\n        right: { objects: [], distance: {} },\n        bottom: { objects: [], distance: {} },\n        left: { objects: [], distance: {} }\n    };\n\n    const insertIfCloser = (object, offset, direction) => {\n        if (offset[direction] < 0) {\n            return;\n        }\n\n        const closestDistance = map[direction].distance;\n\n        // either current object's distance is same as the closest object found so far OR\n        // the closest object does not exist in a list yet\n        if (offset[direction] === closestDistance[direction] || !map[direction].objects.length) {\n            map[direction].objects.push(object);\n            map[direction].distance = offset;\n        } else if (offset[direction] < closestDistance[direction]) {\n            // found closer object\n            map[direction].objects = [object];\n            map[direction].distance = offset;\n        }\n    }\n\n    objects.forEach((object) => {\n        const offset = distance(player, object);\n\n        if (checkAABB(player.raycast.horizontal, object)) {\n            insertIfCloser(object, offset, DIRECTION.LEFT);\n            insertIfCloser(object, offset, DIRECTION.RIGHT);\n        } else if (checkAABB(player.raycast.vertical, object)) {\n            insertIfCloser(object, offset, DIRECTION.TOP);\n            insertIfCloser(object, offset, DIRECTION.BOTTOM);\n        }\n    });\n\n    return map;\n}\n\nclass Beam {\n    constructor() {\n        this.horizontal = {x: 0, y: 0, width: 0, height: 0, color: '#000000'};\n        this.vertical = {x: 0, y: 0, width: 0, height: 0, color: '#000000'};\n    }\n\n    canvasBeam(scene, target) {\n        this.horizontal = {\n            ...this.horizontal,\n            x: 0,\n            y: target.y,\n            width: scene.canvas.width,\n            height: target.height\n        };\n\n        this.vertical = {\n            ...this.vertical,\n            x: target.x,\n            y: 0,\n            width: target.width,\n            height: scene.canvas.height\n        };\n    }\n\n    velocityBeam(scene, target) {\n        // actually its maxXVelocity, maxYVelocity instead of xVlocity and yVelocity\n        this.horizontal = {\n            ...this.horizontal,\n            x: target.x - target.xVelocity,\n            y: target.y,\n            width: target.xVelocity + target.width + target.xVelocity,\n            height: target.height\n        };\n\n        this.vertical = {\n            ...this.vertical,\n            x: target.x,\n            y: target.y - target.yVelocity,\n            width: target.width,\n            height: target.yVelocity + target.height + target.yVelocity\n        };\n    }\n\n    update(scene, target) {\n        this.canvasBeam(scene, target);\n        // this.velocityBeam(scene, target)\n    }\n\n    render(scene) {\n        for (const object of [this.horizontal, this.vertical]) {\n            scene.lineWidth = \"1\";\n            scene.strokeStyle = object.color;\n            scene.strokeRect(object.x, object.y, object.width, object.height);\n        }\n    }\n}\n\n\nclass Raycast {\n    constructor() {\n        this.horizontal = {x: 0, y: 0, width: 0, height: 0, color: '#000000'};\n        this.vertical = {x: 0, y: 0, width: 0, height: 0, color: '#000000'};\n    }\n\n    update(scene, target) {\n        this.horizontal = {\n            ...this.horizontal,\n            x: 0,\n            y: target.y,\n            width: scene.canvas.width,\n            height: target.height\n        };\n\n        this.vertical = {\n            ...this.vertical,\n            x: target.x,\n            y: 0,\n            width: target.width,\n            height: scene.canvas.height\n        };\n    }\n\n    render(scene) {\n        for (const object of [this.horizontal, this.vertical]) {\n            scene.lineWidth = \"1\";\n            scene.strokeStyle = object.color;\n            scene.strokeRect(object.x, object.y, object.width, object.height);\n        }\n    }\n}\n\n\nconst raycast = (scene, object) => {\n    const common = {color: '#000000'};\n\n    return {\n        horizontal: {\n            ...common,\n            x: 0,\n            y: object.y,\n            width: scene.canvas.width,\n            height: object.height\n        },\n\n        vertical: {\n            ...common,\n            x: object.x,\n            y: 0,\n            width: object.width,\n            height: scene.canvas.height\n        }\n    }\n}\n\nclass Player {\n    constructor(x, y, width, height, color) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.color = color;\n        this.baseXVelocity = 8;\n        this.baseYVelocity = this.baseXVelocity;\n        this.xVelocity = this.baseXVelocity;\n        this.yVelocity = this.baseYVelocity;\n        this.lastLog = {};\n        this.raycast = new Raycast();\n        this.direction = null;\n    }\n\n    log(...args) {\n        const serialized = JSON.stringify(...args);\n        if (serialized !== this.lastLog) {\n            this.lastLog = serialized;\n            console.log(...args);\n        }\n    }\n\n    moveLeft(velocity) {\n        this.x -= velocity;\n        this.direction = DIRECTION.LEFT;\n    }\n\n    moveRight(velocity) {\n        this.x += velocity;\n        this.direction = DIRECTION.RIGHT;\n    }\n\n    moveUp(velocity) {\n        this.y -= velocity;\n        this.direction = DIRECTION.TOP;\n    }\n\n    moveDown(velocity) {\n        this.y += velocity;\n        this.direction = DIRECTION.BOTTOM;\n    }\n\n    // returns closest objects to player\n    closest(scene, player, objects) {\n        // scene.canvas.width, scene.canvas.height\n        // const [top, right, bottom, left] = [0, 0, 0, 0];\n\n        const closestObjects = {\n            top: {\n                objects: [],\n                distance: {}\n            },\n            right: {\n                objects: [],\n                distance: []\n            },\n            bottom: {\n                objects: [],\n                distance: []\n            },\n            left: {\n                objects: [],\n                distance: {}\n            }\n        };\n\n        objects.forEach((object) => {\n            if (checkAABB(this.beam.horizontal, object)) {\n                const offset = distance(this, object);\n\n                if (offset.left >= 0) {\n                    if (offset.left === closestObjects.left.distance.left) {\n                        closestObjects.left.objects.push(object);\n                    } else if (!closestObjects.left.distance.left || offset.left < closestObjects.left.distance.left) {\n                        closestObjects.left.objects = [object];\n                        closestObjects.left.distance = offset;\n                    }\n                } else if (offset.right >= 0) {\n                    if (offset.right === closestObjects.right.distance.right) {\n                        closestObjects.right.objects.push(object);\n                    } else if (!closestObjects.right.distance.right || offset.right < closestObjects.right.distance.right) {\n                        closestObjects.right.objects = [object];\n                        closestObjects.right.distance = offset;\n                    }\n                }\n            } else if (checkAABB(this.beam.vertical, object)) {\n                const offset = distance(this, object);\n\n                if (offset.top >= 0) {\n                    if (offset.top === closestObjects.top.distance.top) {\n                        closestObjects.top.objects.push(object);\n                    } else if (!closestObjects.top.distance.top || offset.top < closestObjects.top.distance.top) {\n                        closestObjects.top.objects = [object];\n                        closestObjects.top.distance = offset;\n                    }\n                } else if (offset.bottom >= 0) {\n                    if (offset.bottom === closestObjects.bottom.distance.bottom) {\n                        closestObjects.bottom.objects.push(object);\n                    } else if (!closestObjects.bottom.distance.bottom || offset.bottom < closestObjects.bottom.distance.bottom) {\n                        closestObjects.bottom.objects = [object];\n                        closestObjects.bottom.distance = offset;\n                    }\n                }\n            }\n        });\n\n        return closestObjects;\n    }\n\n    mark(objects) {\n        for (const object of objects) {\n            object.markAsClosest();\n        }\n    }\n\n    update(scene, objects) {\n        // TODO\n        // calculate closest top, right, bottom and left objects\n        // player can be close to multiple top objects\n\n        /////////////// mark\n        // const nearby = findNearbyObjects(this, objects);\n        // this.log(nearby)\n        // const closestObjects = groupClosestObjectsByLocation(this, nearby);\n\n        // const closestObjects = this.closest(scene, this, objects);\n        // this.log(closestObjects)\n        const closestObjects = closest(scene, this, objects);\n\n        for (const object of objects) {\n            object.unMarkAsClosest();\n        }\n\n        this.mark(closestObjects.top.objects);\n        this.mark(closestObjects.right.objects);\n        this.mark(closestObjects.bottom.objects);\n        this.mark(closestObjects.left.objects);\n        ///////////////\n\n        const velocity = {\n            top: closestObjects.top.distance.top === undefined ? this.baseYVelocity : Math.min(this.baseYVelocity, closestObjects.top.distance.top - 1),\n            right: closestObjects.right.distance.right === undefined ? this.baseXVelocity : Math.min(this.baseXVelocity, closestObjects.right.distance.right - 1),\n            bottom: closestObjects.bottom.distance.bottom === undefined ? this.baseYVelocity : Math.min(this.baseYVelocity, closestObjects.bottom.distance.bottom - 1),\n            left: closestObjects.left.distance.left === undefined ? this.baseXVelocity : Math.min(this.baseXVelocity, closestObjects.left.distance.left - 1)\n        }\n\n        // const velocity = {\n        //     top: closestObjects.top.distance.top === undefined ? this.baseYVelocity : Math.min(this.baseYVelocity, closestObjects.top.distance.top),\n        //     right: closestObjects.right.distance.right === undefined ? this.baseXVelocity : Math.min(this.baseXVelocity, closestObjects.right.distance.right),\n        //     bottom: closestObjects.bottom.distance.bottom === undefined ? this.baseYVelocity : Math.min(this.baseYVelocity, closestObjects.bottom.distance.bottom),\n        //     left: closestObjects.left.distance.left === undefined ? this.baseXVelocity : Math.min(this.baseXVelocity, closestObjects.left.distance.left)\n        // }\n\n        //////////////////////////////////////// movement\n        if (keyboard.right) {\n            this.moveRight(velocity.right);\n        }\n\n        if (keyboard.left) {\n            this.moveLeft(velocity.left);\n        }\n\n        if (keyboard.up) {\n            this.moveUp(velocity.top);\n        }\n\n        if (keyboard.down) {\n            this.moveDown(velocity.bottom);\n        }\n\n\n        /////////////////////////////////////// scene boundaries\n        // top boundary\n         if (this.y < 0) {\n            this.y = 0;\n        }\n\n         // right boundary\n        if (this.x + this.width > scene.canvas.width) {\n            this.x = scene.canvas.width - this.width;\n        }\n\n         // left boundary\n         if (this.x < 0) {\n             this.x = 0;\n         }\n\n        // bottom boundary\n        if ((this.height + this.y) > scene.canvas.height) {\n            this.y = scene.canvas.height - this.height;\n        }\n\n        // TODO: Update raycast so that the ray not penetrating the closest objects\n        this.raycast.update(scene, this);\n    }\n\n    render(scene) {\n        scene.fillStyle = this.color;\n        scene.fillRect(this.x, this.y, this.width, this.height);\n        scene.fillStyle = 'rgba(0, 0, 0, 1)';\n        scene.font = '12px monospace';\n        scene.fillText(`${this.x},${this.y}`, this.x, this.y);\n        this.raycast.render(scene);\n    }\n}\n\nclass Thing {\n    constructor(name, x, y, width, height, color) {\n        this.name = name;\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.color = color;\n        this.originalColor = color;\n    }\n\n    update() {}\n\n    render(scene) {\n        scene.fillStyle = this.color;\n        scene.fillRect(this.x, this.y, this.width, this.height);\n        scene.fillStyle = 'rgba(0, 0, 0, 1)';\n        scene.font = '12px monospace';\n        scene.fillText(this.name, this.x, this.y);\n    }\n\n    isInside = (n, min, max) => {\n        // TODO: or > and <?\n        return (n > min) && (n < max);\n    }\n\n    // AABB - axis aligned bounding boxes\n    checkCollision(object) {\n        let collision = { top: false, right: false, bottom: false, left: false };\n\n        const topOverlap = this.isInside(object.y, this.y, this.y + this.height);\n        const leftOverlap = this.isInside(object.x, this.x, this.x + this.width);\n        const bottomOverlap = this.isInside(object.y + object.height, this.y, this.y + this.height);\n        const rightOverlap = this.isInside(object.x + object.width, this.x, this.x + this.width);\n\n        const leftOrRightOverlap = leftOverlap || rightOverlap;\n        const topOrBottomOverlap = topOverlap || bottomOverlap;\n\n        if (topOverlap && leftOrRightOverlap) {\n            collision = { ...collision, top: true };\n        }\n\n        if (bottomOverlap && leftOrRightOverlap) {\n            collision = { ...collision, bottom: true };\n        }\n\n        if (leftOverlap && topOrBottomOverlap) {\n            collision = { ...collision, left: true };\n        }\n\n        if (rightOverlap && topOrBottomOverlap) {\n            collision = { ...collision, right: true };\n        }\n\n        return {\n            ...collision,\n            target: {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            }\n        };\n    }\n\n    checkAABB(object) {\n        // my way\n        const top = object.y > this.y + this.height;\n        const bottom = object.y + object.height < this.y;\n        const right = object.x + object.width < this.x;\n        const left = object.x > this.x + this.width;\n\n        // if any of (top, right, bottom, left) is true, then there is no collision because\n        // one edge is far away from the other\n        return !(top || right || bottom || left);\n\n        // const left = object.y\n\n        // if any of (top, right, bottom, left) is true, then there is no collision because\n        // one edge is far away from the other\n        // return ;\n    }\n\n    checkAABB2(player) {\n        return (\n            (player.y < this.y + this.height) && (player.y + player.height > this.y) &&\n            (player.x < this.x + this.width) && (player.x + player.width > this.x)\n        )\n    }\n\n    distance(object) {\n        // return {\n        //     top: object.y - (this.y + this.height),\n        //     bottom: this.y - (object.y + object.height),\n        //     right: this.x - (object.x + object.width),\n        //     left: object.x - (this.x + this.width)\n        // }\n\n        return {\n            top: object.y - (this.y + this.height),\n            bottom: this.y - (object.y + object.height),\n            right: this.x - (object.x + object.width),\n            left: object.x - (this.x + this.width)\n        }\n    }\n\n    markAsClosest() {\n        this.color = COLORS.YELLOW;\n    }\n\n    unMarkAsClosest() {\n        this.color = this.originalColor;\n    }\n}\n\n\n\nconst canvas = document.getElementById(\"canvas\");\nconst scene = canvas.getContext(\"2d\");\n// const ground = new Thing('ground', 0, canvas.height - 80, canvas.width, 80, '#b399c9');\n\nconst player = new Player(canvas.width / 2, canvas.height - 20, 20, 20, '#8dc267');\nconst box = new Thing('box', 500, canvas.height - 40, 40, 40, '#ef8f4f');\nconst box2 = new Thing('box-2', canvas.width / 2 - 120, canvas.height - 120, 40, 40, '#ef8f4f');\nconst box3 = new Thing('box-3', 200, canvas.height - 220, 40, 40, '#ef8f4f');\nconst box4 = new Thing('box-4', 240, canvas.height - 220, 40, 40, '#b399c9');\nconst box5 = new Thing('box-5', 300, canvas.height - 260, 40, 40, '#ef8f4f');\nconst box6 = new Thing('box-6', 340, canvas.height - 270, 40, 40, '#b399c9');\nconst box7 = new Thing('box-7', 240, canvas.height - 350, 40, 40, '#b399c9');\n\nconst box8 = new Thing('box-8', 0, canvas.height - 40, 40, 40, '#ef8f4f');\nconst box9 = new Thing('box-9', 0, canvas.height - 80, 40, 40, '#b399c9');\nconst box10 = new Thing('box-10', 40, canvas.height - 40, 40, 40, '#b399c9');\n\nconst box11 = new Thing('box-11', 80, canvas.height - 140, 40, 40, '#ef8f4f');\nconst box12 = new Thing('box-12', 40, canvas.height - 140, 40, 40, '#b399c9');\nconst box13 = new Thing('box-13', 80, canvas.height - 100, 40, 40, '#b399c9');\n\nconst box14 = new Thing('box-14', 40, 40, 40, 40, '#b399c9');\nconst box15 = new Thing('box-15', 80, 40, 40, 40, '#ef8f4f');\nconst box16 = new Thing('box-16', 120, 40, 40, 40, '#b399c9');\nconst box17 = new Thing('box-17', 40, 120, 40, 40, '#ef8f4f');\nconst box18 = new Thing('box-18', 80, 120, 40, 40, '#b399c9');\nconst box19 = new Thing('box-19', 120, 120, 40, 40, '#ef8f4f');\n\nconst box20 = new Thing('box-20', canvas.width-80, 40, 40, 40, '#ef8f4f');\nconst box21 = new Thing('box-21', canvas.width-80, 80, 40, 40, '#b399c9');\nconst box22 = new Thing('box-22', canvas.width-80, 120, 40, 40, '#ef8f4f');\nconst box23 = new Thing('box-23', canvas.width-160, 40, 40, 40, '#ef8f4f');\nconst box24 = new Thing('box-24', canvas.width-160, 80, 40, 40, '#b399c9');\nconst box25 = new Thing('box-25', canvas.width-160, 120, 40, 40, '#ef8f4f');\n\nconst box26 = new Thing('box-26', canvas.width-200, 200, 40, 40, '#b399c9');\nconst box27 = new Thing('box-27', canvas.width-160, 200, 40, 40, '#ef8f4f');\nconst box28 = new Thing('box-28', canvas.width-120, 200, 40, 40, '#b399c9');\nconst box29 = new Thing('box-29', canvas.width-80, 200, 40, 40, '#ef8f4f');\n\nconst box30 = new Thing('box-30', 400, 300, 40, 40, '#ef8f4f');\nconst box31 = new Thing('box-31', 360, 340, 40, 40, '#b399c9');\nconst box32 = new Thing('box-32', 400, 340, 40, 40, '#b399c9');\nconst box33 = new Thing('box-33', 400, 380, 40, 40, '#ef8f4f');\nconst box34 = new Thing('box-34', 440, 340, 40, 40, '#b399c9');\n\nconst box35 = new Thing('box-35', 300, 380, 15, 15, '#ef8f4f');\nconst box36 = new Thing('box-36', 300, 420, 15, 15, '#ef8f4f');\n\nconst box37 = new Thing('box-37', 80, 200, 10, 10, '#ef8f4f');\nconst box38 = new Thing('box-38', 80, 210, 10, 10, '#b399c9');\n\nconst platform1 = new Thing('platform1', 50, 480, 150, 10, '#fff');\nconst platform2 = new Thing('platform2', 250, 500, 150, 10, '#fff');\n\n// const beam = new Beam();\n// const rayTop = new Thing('ray-top', 0, 0, 0, 0, '#49a0e1');\n// const rayRight = new Thing('ray-right', 0, 0, 0, 0, '#49a0e1');\n// const rayBottom = new Thing('ray-bottom', 0, 0, 0 , 0, '#49a0e1');\n// const rayLeft = new Thing('ray-left', 0, 0, 0, 0, '#49a0e1');\n\nconst objects = [\n    // ground,\n    box,\n    box2,\n    box3,\n    box4,\n    box5,\n    box6,\n    box7,\n    box8,\n    box9,\n    box10,\n    box11,\n    box12,\n    box13,\n    box14,\n    box15,\n    box16,\n    box17,\n    box18,\n    box19,\n    box20,\n    box21,\n    box22,\n    box23,\n    box24,\n    box25,\n    box26,\n    box27,\n    box28,\n    box29,\n    box30,\n    box31,\n    box32,\n    box33,\n    box34,\n    box35,\n    box36,\n    box37,\n    box38,\n    player,\n    // platform1,\n    // platform2\n\n];\n\nconst handleKeyDownPress = (event) => {\n    switch (event.key) {\n        case 'ArrowUp':\n            keyboard.up = true;\n            break;\n\n        case 'ArrowLeft':\n            keyboard.left = true;\n            break;\n\n        case 'ArrowDown':\n            keyboard.down = true;\n            break;\n\n        case 'ArrowRight':\n            keyboard.right = true;\n            break;\n\n        case ' ':\n            if (!keyboard.space) {\n                keyboard.space = true;\n            }\n            break;\n\n        default:\n            break;\n    }\n}\n\nconst handleKeyUpPress = (event) => {\n    switch (event.key) {\n        case 'ArrowUp':\n            keyboard.up = false;\n            break;\n\n        case 'ArrowLeft':\n            keyboard.left = false;\n            break;\n\n        case 'ArrowDown':\n            keyboard.down = false;\n            break;\n\n        case 'ArrowRight':\n            keyboard.right = false;\n            break;\n\n        case ' ':\n            keyboard.space = false;\n            break;\n\n        default:\n            break;\n    }\n};\n\n\ndocument.addEventListener('keydown', handleKeyDownPress);\ndocument.addEventListener('keyup', handleKeyUpPress);\n\n\nfunction draw() {\n    requestAnimationFrame(draw);\n\n    scene.clearRect(0, 0, canvas.width, canvas.height);\n\n    for (const object of objects) {\n        object.update(scene, objects.filter(current => current !== object));\n        object.render(scene);\n    }\n}\n\ndraw();\n"],"names":["COLORS","BEIGE","ORANGE","YELLOW","GREEN","LIGHT_BLUE","BLUE","PURPLE","SOFT_RED","SOFT_YELLOW","SOFT_CYAN","SOFT_BLUE","DIRECTION","TOP","RIGHT","BOTTOM","LEFT","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","keyboard","left","right","up","down","space","checkAABB","objectA","objectB","top","y","height","bottom","x","width","distance","player","target","closest","scene","objects","map","insertIfCloser","object","offset","direction","closestDistance","length","push","forEach","raycast","horizontal","vertical","Raycast","constructor","color","update","canvas","render","lineWidth","strokeStyle","strokeRect","Player","baseXVelocity","baseYVelocity","xVelocity","yVelocity","lastLog","log","args","serialized","JSON","stringify","console","moveLeft","velocity","moveRight","moveUp","moveDown","closestObjects","beam","mark","markAsClosest","unMarkAsClosest","undefined","Math","min","fillStyle","fillRect","font","fillText","Thing","name","originalColor","isInside","n","max","checkCollision","collision","topOverlap","leftOverlap","bottomOverlap","rightOverlap","leftOrRightOverlap","topOrBottomOverlap","checkAABB2","document","getElementById","getContext","box","box2","box3","box4","box5","box6","box7","box8","box9","box10","box11","box12","box13","box14","box15","box16","box17","box18","box19","box20","box21","box22","box23","box24","box25","box26","box27","box28","box29","box30","box31","box32","box33","box34","box35","box36","box37","box38","platform1","platform2","handleKeyDownPress","event","key","handleKeyUpPress","addEventListener","draw","requestAnimationFrame","clearRect","filter","current"],"version":3,"file":"13-platformer-closest-objects.bf00be02.js.map"}