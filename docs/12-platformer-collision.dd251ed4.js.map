{"mappings":"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","sources":["./src/12-platformer-collision/index.js"],"sourcesContent":["/** Pallete\n#fcf0c0\n#ef8f4f\n#f8d803\n#8dc267\n#66dcfe\n#49a0e1\n#b399c9\n*/\n\nconst sum = (arr) => {\n    return arr.reduce((total, x) => total + x, 0)\n}\n\nconst keyboard = {\n    left: false,\n    right: false,\n    up: false,\n    down: false,\n    space: false\n}\n\nfunction createJumpAnimation(height) {\n    let frame = 0;\n    let isRunning = false;\n    const movement = [\n        // ascend\n        -0.3, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1,\n\n        // apex\n        0, 0, 0, 0,\n\n        // descend\n        0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.3\n    ];\n\n    return {\n        step: () => {\n            const velocity = height * movement[frame];\n            frame += 1;\n            return velocity;\n        },\n\n        next: () => {\n            const velocity = height * movement[frame];\n            frame += 1;\n            return velocity;\n        },\n\n        previous: () => {\n            frame = frame - 1 >= 0 ? frame - 1 : 0;\n            return height * movement[frame];\n        },\n\n        start: () => {\n            isRunning = true;\n        },\n\n        stop: () => {\n            frame = 0;\n            isRunning = false;\n        },\n\n        isRunning: () => {\n            return isRunning;\n        },\n\n        isLastFrame: () => {\n            return frame >= movement.length;\n        }\n    }\n}\n\nclass Player {\n    constructor(x, y, width, height, color) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.color = color;\n        this.baseXVelocity = 8;\n        this.baseYVelocity = this.baseXVelocity;\n        this.xVelocity = this.baseXVelocity;\n        this.yVelocity = this.baseYVelocity;\n        this.isJumping = false;\n        this.jumpAnimation = createJumpAnimation(this.height * 5);\n        this.gravity = 1;\n        this.lastLog = {};\n    }\n\n    log(...args) {\n        const serialized = JSON.stringify(...args);\n        if (serialized !== this.lastLog) {\n            this.lastLog = serialized;\n            console.log(...args);\n        }\n    }\n\n    moveLeft(velocity) {\n        this.x -= velocity;\n    }\n\n    moveRight(velocity) {\n        this.x += velocity;\n    }\n\n    moveUp(velocity) {\n        this.y -= velocity;\n    }\n\n    moveDown(velocity) {\n        this.y += velocity;\n    }\n\n    // returns closest object to player\n    closest(player, objects) {\n        return objects.reduce((closest, object) => {\n            const { top: closestTop, right: closestRight, bottom: closestBottom, left: closestLeft } = closest.distance(player);\n            const { top, right, bottom, left } = object.distance(player);\n\n\n            const closestMin = sum([closestTop, closestRight, closestBottom, closestLeft].filter((x) => x >= 0));\n            const objectMin = sum([top, right, bottom, left].filter((x) => x >= 0));\n\n            if (objectMin < closestMin) {\n                return object;\n            }\n\n            return closest;\n        }, objects[0]);\n    }\n\n    update(scene, objects) {\n        // check for collision with other objects\n        // const collisions = [];\n        //\n        // let collision = {};\n        // for (const object of objects) {\n        //     collision = object.checkAABB(this);\n        //\n        //     if (collision) {\n        //         console.log('collision! ', collision);\n        //         collisions.push(object);\n        //     }\n        // }\n\n        // calculate movement velocity per direction\n        // const velocity = objects.reduce((closest, object) => {\n        //     const { top, right, bottom, left } = object.distance(this);\n        //     closest.top = top >= 0 ? Math.min(closest.top, top) : closest.top;\n        //     closest.right = right >= 0 ? Math.min(closest.right, right) : closest.right;\n        //     closest.bottom = bottom >= 0 ? Math.min(closest.bottom, bottom) : closest.bottom;\n        //     closest.left = left >= 0 ? Math.min(closest.left, left) : closest.left;\n        //\n        //     return closest;\n        // }, { top: this.yVelocity, right: this.xVelocity, bottom: this.yVelocity, left: this.xVelocity });\n        //\n        // const canMoveRightLeft = velocity.left >= 0 || velocity.right >= 0;\n        // const canMoveUpDown = velocity.top >= 0 || velocity.bottom >= 0;\n\n        // const { top, right, bottom, left } = objects[0].distance(this);\n        // const { top: top2, right: right2, bottom: bottom2, left: left2 } = objects[1].distance(this);\n\n        // console.log(objects[0].name, top, right, bottom, left);\n        // console.log(objects[1].name, top2, right2, bottom2, left2);\n\n        const closestObject = this.closest(this, objects);\n\n        // console.log('closest object is: ', closestObject.name);\n\n        const distance = closestObject.distance(this);\n\n        // subtract one pixel to avoid collision\n        // const velocity = {\n        //     top: this.xVelocity,\n        //     right: distance.right - 1 >= 0 ? Math.min(this.baseXVelocity, distance.right - 1) : this.baseXVelocity,\n        //     bottom: this.xVelocity,\n        //     left: distance.left - 1 >= 0 ? Math.min(this.baseXVelocity, distance.left - 1) : this.baseXVelocity,\n        // }\n\n        const velocity = {\n            top: this.baseXVelocity,\n            bottom: this.baseXVelocity\n        };\n\n        const isTopOrBottomCollision = (distance.top - 1 <= 0 && distance.bottom - 1 <= 0);\n        const isLeftOrRightCollision = (distance.left - 1 <= 0 && distance.right - 1 <= 0);\n\n\n        if (distance.right - 1 >= 0 && isTopOrBottomCollision) {\n            velocity.right = Math.min(this.baseXVelocity, distance.right - 1);\n        } else {\n            velocity.right = this.baseXVelocity;\n        }\n\n        // console.log(distance.top, distance.right, distance.bottom, distance.left)\n        if (distance.left - 1 >= 0 && isTopOrBottomCollision) {\n            // can not pass below or above\n            velocity.left = Math.min(this.baseXVelocity, distance.left - 1);\n        } else {\n            velocity.left = this.baseXVelocity;\n        }\n\n        if (distance.top - 1 >= 0 && isLeftOrRightCollision) {\n            velocity.top = Math.min(this.baseYVelocity, distance.top - 1);\n        } else {\n            velocity.top = this.baseYVelocity;\n        }\n\n        if (distance.bottom - 1 >= 0 && isLeftOrRightCollision) {\n            velocity.bottom = Math.min(this.baseYVelocity, distance.bottom - 1);\n        } else {\n            velocity.bottom = this.baseYVelocity;\n        }\n\n        // const velocity = {\n        //     top: this.xVelocity,\n        //     right: this.xVelocity,\n        //     bottom: this.xVelocity,\n        //     left: this.xVelocity,\n        // }\n\n        // console.log(velocity)\n        // this.log(closest);\n\n        // for (const object of objects) {\n        //     distance = {};\n        //     distance = object.distance(this);\n        //\n        //     // calculate distance from all objects\n        //     // find the closest object\n        //     // apply min(xVelocity, distanceX) when player is moving\n        //     //\n        //\n        //     // if (distance.top <= 0 && distance.right <= 0 && distance.bottom <= 0 && distance.left <= 0) {\n        //     //     const max = Math.max(distance.top, distance.right, distance.bottom, distance.left);\n        //     //     console.log(distance, max);\n        //     // }\n        //     // this.log(distance);\n        //     if (isCollision) {\n        //         break;\n        //     }\n        // }\n\n        if (keyboard.right) {\n            this.moveRight(velocity.right);\n        }\n\n        if (keyboard.left) {\n            this.moveLeft(velocity.left);\n        }\n\n        // collision test\n        if (keyboard.up) {\n            this.moveUp(velocity.top);\n        }\n\n        if (keyboard.down) {\n            this.moveDown(velocity.bottom);\n        }\n\n        // TODO: prevent moving into other objects\n        // if (keyboard.right && !collision.right) {\n        //     this.moveRight();\n        // }\n        //\n        // if (keyboard.left && !collision.left) {\n        //     this.moveLeft();\n        // }\n\n        // TODO: cancel gravity when player stands still?\n\n        // if (isSpacebarKeyPressed && !this.jumpAnimation.isRunning()) {\n        //     this.jumpAnimation.start();\n        //     this.xVelocity *= 2;\n        // }\n        //\n        // if (this.jumpAnimation.isRunning() && !collision.bottom && !collision.top) {\n        //     this.y += this.jumpAnimation.step();\n        // }\n        //\n        // if (this.jumpAnimation.isLastFrame() || collision.bottom || collision.top) {\n        //     this.jumpAnimation.stop();\n        //     this.xVelocity = this.baseXVelocity;\n        // }\n        //\n        // if (collision.bottom) {\n        //     this.y = collision.y - this.height;\n        // } else {\n        //     this.y += this.gravity;\n        // }\n        //\n\n        // scene boundaries\n        // top boundary\n         if (this.y < 0) {\n            this.y = 0;\n        }\n\n         // right boundary\n        if (this.x + this.width > scene.canvas.width) {\n            this.x = scene.canvas.width - this.width;\n        }\n\n         // left boundary\n         if (this.x < 0) {\n             this.x = 0;\n         }\n\n        // bottom boundary\n        if ((this.height + this.y) > scene.canvas.height) {\n            this.y = scene.canvas.height - this.height;\n        }\n    }\n\n    render(scene) {\n        scene.fillStyle = this.color;\n        scene.fillRect(this.x, this.y, this.width, this.height);\n        scene.fillStyle = 'rgba(0, 0, 0, 1)';\n        scene.font = '12px monospace';\n        scene.fillText(`${this.x},${this.y}`, this.x, this.y);\n    }\n}\n\nclass Thing {\n    constructor(name, x, y, width, height, color) {\n        this.name = name;\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.color = color;\n    }\n\n    update() {}\n\n    render(scene) {\n        scene.fillStyle = this.color;\n        scene.fillRect(this.x, this.y, this.width, this.height);\n        scene.fillStyle = 'rgba(0, 0, 0, 1)';\n        scene.font = '12px monospace';\n        scene.fillText(this.name, this.x, this.y);\n    }\n\n    isInside = (n, min, max) => {\n        // TODO: or > and <?\n        return (n > min) && (n < max);\n    }\n\n    // AABB - axis aligned bounding boxes\n    checkCollision(object) {\n        let collision = { top: false, right: false, bottom: false, left: false };\n\n        const topOverlap = this.isInside(object.y, this.y, this.y + this.height);\n        const leftOverlap = this.isInside(object.x, this.x, this.x + this.width);\n        const bottomOverlap = this.isInside(object.y + object.height, this.y, this.y + this.height);\n        const rightOverlap = this.isInside(object.x + object.width, this.x, this.x + this.width);\n\n        const leftOrRightOverlap = leftOverlap || rightOverlap;\n        const topOrBottomOverlap = topOverlap || bottomOverlap;\n\n        if (topOverlap && leftOrRightOverlap) {\n            collision = { ...collision, top: true };\n        }\n\n        if (bottomOverlap && leftOrRightOverlap) {\n            collision = { ...collision, bottom: true };\n        }\n\n        if (leftOverlap && topOrBottomOverlap) {\n            collision = { ...collision, left: true };\n        }\n\n        if (rightOverlap && topOrBottomOverlap) {\n            collision = { ...collision, right: true };\n        }\n\n        return {\n            ...collision,\n            target: {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            }\n        };\n    }\n\n    checkAABB(object) {\n        // my way\n        const top = object.y > this.y + this.height;\n        const bottom = object.y + object.height < this.y;\n        const right = object.x + object.width < this.x;\n        const left = object.x > this.x + this.width;\n\n        // if any of (top, right, bottom, left) is true, then there is no collision because\n        // one edge is far away from the other\n        return !(top || right || bottom || left);\n\n        // const left = object.y\n\n        // if any of (top, right, bottom, left) is true, then there is no collision because\n        // one edge is far away from the other\n        // return ;\n    }\n\n    checkAABB2(player) {\n        return (\n            (player.y < this.y + this.height) && (player.y + player.height > this.y) &&\n            (player.x < this.x + this.width) && (player.x + player.width > this.x)\n        )\n    }\n\n    distance(object) {\n        // return {\n        //     top: object.y - (this.y + this.height),\n        //     bottom: this.y - (object.y + object.height),\n        //     right: this.x - (object.x + object.width),\n        //     left: object.x - (this.x + this.width)\n        // }\n\n        return {\n            top: object.y - (this.y + this.height),\n            bottom: this.y - (object.y + object.height),\n            right: this.x - (object.x + object.width),\n            left: object.x - (this.x + this.width)\n        }\n    }\n}\n\nconst canvas = document.getElementById(\"canvas\");\nconst scene = canvas.getContext(\"2d\");\n// const ground = new Thing('ground', 0, canvas.height - 80, canvas.width, 80, '#b399c9');\n\nconst player = new Player(canvas.width / 2, canvas.height - 20, 20, 20, '#8dc267');\nconst box = new Thing('box', canvas.width / 2 + 120, canvas.height - 40, 40, 40, '#ef8f4f');\nconst box2 = new Thing('box-2', canvas.width / 2 - 120, canvas.height - 120, 40, 40, '#ef8f4f');\nconst box3 = new Thing('box-3', 200, canvas.height - 220, 40, 40, '#ef8f4f');\nconst box4 = new Thing('box-4', 240, canvas.height - 220, 40, 40, '#b399c9');\nconst box5 = new Thing('box-5', 300, canvas.height - 260, 40, 40, '#ef8f4f');\nconst box6 = new Thing('box-6', 340, canvas.height - 270, 40, 40, '#b399c9');\nconst box7 = new Thing('box-7', 240, canvas.height - 350, 40, 40, '#b399c9');\n\nconst box8 = new Thing('box-8', 0, canvas.height - 40, 40, 40, '#ef8f4f');\nconst box9 = new Thing('box-9', 0, canvas.height - 80, 40, 40, '#b399c9');\nconst box10 = new Thing('box-10', 40, canvas.height - 40, 40, 40, '#b399c9');\n\nconst box11 = new Thing('box-11', 80, canvas.height - 140, 40, 40, '#ef8f4f');\nconst box12 = new Thing('box-12', 40, canvas.height - 140, 40, 40, '#b399c9');\nconst box13 = new Thing('box-13', 80, canvas.height - 100, 40, 40, '#b399c9');\n\nconst box14 = new Thing('box-14', 40, 40, 40, 40, '#b399c9');\nconst box15 = new Thing('box-15', 80, 40, 40, 40, '#ef8f4f');\nconst box16 = new Thing('box-16', 120, 40, 40, 40, '#b399c9');\nconst box17 = new Thing('box-17', 40, 120, 40, 40, '#ef8f4f');\nconst box18 = new Thing('box-18', 80, 120, 40, 40, '#b399c9');\nconst box19 = new Thing('box-19', 120, 120, 40, 40, '#ef8f4f');\n\nconst box20 = new Thing('box-20', canvas.width-80, 40, 40, 40, '#ef8f4f');\nconst box21 = new Thing('box-21', canvas.width-80, 80, 40, 40, '#b399c9');\nconst box22 = new Thing('box-22', canvas.width-80, 120, 40, 40, '#ef8f4f');\nconst box23 = new Thing('box-23', canvas.width-160, 40, 40, 40, '#ef8f4f');\nconst box24 = new Thing('box-24', canvas.width-160, 80, 40, 40, '#b399c9');\nconst box25 = new Thing('box-25', canvas.width-160, 120, 40, 40, '#ef8f4f');\n\nconst box26 = new Thing('box-26', canvas.width-200, 200, 40, 40, '#b399c9');\nconst box27 = new Thing('box-27', canvas.width-160, 200, 40, 40, '#ef8f4f');\nconst box28 = new Thing('box-28', canvas.width-120, 200, 40, 40, '#b399c9');\nconst box29 = new Thing('box-29', canvas.width-80, 200, 40, 40, '#ef8f4f');\n\nconst platform1 = new Thing('platform1', 50, canvas.height - 60, 150, 10, '#fff');\nconst platform2 = new Thing('platform2', 250, canvas.height - 120, 150, 10, '#fff');\n\n\nconst objects = [\n    // ground,\n    box,\n    box2,\n    box3,\n    box4,\n    box5,\n    box6,\n    box7,\n    box8,\n    box9,\n    box10,\n    box11,\n    box12,\n    box13,\n    box14,\n    box15,\n    box16,\n    box17,\n    box18,\n    box19,\n    box20,\n    box21,\n    box22,\n    box23,\n    box24,\n    box25,\n    box26,\n    box27,\n    box28,\n    box29,\n    player,\n    // platform1,\n    // platform2\n];\n\nconst handleKeyDownPress = (event) => {\n    switch (event.key) {\n        case 'ArrowUp':\n            keyboard.up = true;\n            break;\n\n        case 'ArrowLeft':\n            keyboard.left = true;\n            break;\n\n        case 'ArrowDown':\n            keyboard.down = true;\n            break;\n\n        case 'ArrowRight':\n            keyboard.right = true;\n            break;\n\n        case ' ':\n            if (!keyboard.space) {\n                keyboard.space = true;\n            }\n            break;\n\n        default:\n            break;\n    }\n}\n\nconst handleKeyUpPress = (event) => {\n    switch (event.key) {\n        case 'ArrowUp':\n            keyboard.up = false;\n            break;\n\n        case 'ArrowLeft':\n            keyboard.left = false;\n            break;\n\n        case 'ArrowDown':\n            keyboard.down = false;\n            break;\n\n        case 'ArrowRight':\n            keyboard.right = false;\n            break;\n\n        case ' ':\n            keyboard.space = false;\n            break;\n\n        default:\n            break;\n    }\n};\n\n\ndocument.addEventListener('keydown', handleKeyDownPress);\ndocument.addEventListener('keyup', handleKeyUpPress);\n\n\nfunction draw() {\n    requestAnimationFrame(draw);\n\n    scene.clearRect(0, 0, canvas.width, canvas.height);\n\n    for (const object of objects) {\n        object.update(scene, objects.filter(current => current !== object));\n        object.render(scene);\n    }\n}\n\ndraw();\n"],"names":["sum","arr","reduce","total","x","keyboard","left","right","up","down","space","createJumpAnimation","height","frame","isRunning","movement","step","velocity","next","previous","start","stop","isLastFrame","length","Player","constructor","y","width","color","baseXVelocity","baseYVelocity","xVelocity","yVelocity","isJumping","jumpAnimation","gravity","lastLog","log","args","serialized","JSON","stringify","console","moveLeft","moveRight","moveUp","moveDown","closest","player","objects","object","top","closestTop","closestRight","bottom","closestBottom","closestLeft","distance","closestMin","filter","objectMin","update","scene","closestObject","isTopOrBottomCollision","isLeftOrRightCollision","Math","min","canvas","render","fillStyle","fillRect","font","fillText","Thing","name","isInside","n","max","checkCollision","collision","topOverlap","leftOverlap","bottomOverlap","rightOverlap","leftOrRightOverlap","topOrBottomOverlap","target","checkAABB","checkAABB2","document","getElementById","getContext","box","box2","box3","box4","box5","box6","box7","box8","box9","box10","box11","box12","box13","box14","box15","box16","box17","box18","box19","box20","box21","box22","box23","box24","box25","box26","box27","box28","box29","platform1","platform2","handleKeyDownPress","event","key","handleKeyUpPress","addEventListener","draw","requestAnimationFrame","clearRect","current"],"version":3,"file":"12-platformer-collision.dd251ed4.js.map"}