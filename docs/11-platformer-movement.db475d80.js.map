{"mappings":"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","sources":["./src/11-platformer-movement/index.js"],"sourcesContent":["let isRightKeyPressed = false;\nlet isLeftKeyPressed = false;\nlet isUpKeyPressed = false;\nlet isDownKeyPressed = false;\nlet isSpacebarKeyPressed = false;\n\n\nfunction createJumpAnimation(height) {\n    let frame = 0;\n    let isRunning = false;\n    const movement = [\n        // ascend\n        -0.3, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1,\n\n        // apex\n        0, 0, 0, 0,\n\n        // descend\n        0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.3\n    ];\n\n    const animation = {\n        step: () => {\n            if (animation.isFinished()) {\n                return 0;\n            }\n\n            const velocity = height * movement[frame];\n            frame += 1;\n            return velocity;\n        },\n\n        start: () => {\n            isRunning = true;\n        },\n\n        reset: () => {\n            frame = 0;\n            isRunning = false;\n        },\n\n        isRunning: () => {\n            return isRunning;\n        },\n\n        isFinished: () => {\n            return frame >= movement.length;\n        }\n    }\n\n    return animation;\n}\n\nclass Player {\n    constructor(x, y, width, height, color) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.color = color;\n        this.baseXVelocity = 5;\n        this.xVelocity = 5;\n        this.isJumping = false;\n        this.jumpAnimation = createJumpAnimation(this.height * 5);\n        this.gravity = 1;\n\n    }\n\n    moveLeft() {\n        this.x -= this.xVelocity;\n    }\n\n    moveRight() {\n        this.x += this.xVelocity;\n    }\n\n    render(scene) {\n        if (isRightKeyPressed) {\n            this.moveRight();\n        }\n\n        if (isLeftKeyPressed) {\n            this.moveLeft();\n        }\n\n        if (isSpacebarKeyPressed && !this.jumpAnimation.isRunning()) {\n            this.jumpAnimation.start();\n            this.xVelocity *= 2;\n        }\n\n        if (this.jumpAnimation.isRunning()) {\n            this.y += this.jumpAnimation.step();\n        }\n\n        if (this.jumpAnimation.isFinished()) {\n            this.jumpAnimation.reset();\n            this.xVelocity = this.baseXVelocity;\n        }\n\n        this.y += this.gravity;\n\n\n        // top boundary\n         if (this.y < 0) {\n            this.y = 0;\n            this.isJumping = false;\n        }\n\n        // bottom boundary\n        if (scene.canvas.height < (this.height + this.y)) {\n            this.y = scene.canvas.height - this.height;\n            this.isJumping = false;\n            this.xVelocity = this.baseXVelocity;\n        }\n\n        scene.fillStyle = this.color;\n        scene.fillRect(this.x, this.y, this.width, this.height);\n    }\n}\n\nconst canvas = document.getElementById(\"canvas\");\nconst scene = canvas.getContext(\"2d\");\nconst player = new Player(canvas.width / 2, canvas.height - 20, 20, 20, '#fff');\n\n\nconst handleKeyDownPress = (event) => {\n    switch (event.key) {\n        case 'ArrowUp':\n            isUpKeyPressed = true;\n            break;\n\n        case 'ArrowLeft':\n            isLeftKeyPressed = true;\n            break;\n\n        case 'ArrowDown':\n            isDownKeyPressed = true;\n            break;\n\n        case 'ArrowRight':\n            isRightKeyPressed = true;\n            break;\n\n        case ' ':\n            if (!isSpacebarKeyPressed) {\n                isSpacebarKeyPressed = true;\n            }\n            break;\n\n        default:\n            break;\n    }\n}\n\nconst handleKeyUpPress = (event) => {\n    switch (event.key) {\n        case 'ArrowUp':\n            isUpKeyPressed = false;\n            break;\n\n        case 'ArrowLeft':\n            isLeftKeyPressed = false;\n            break;\n\n        case 'ArrowDown':\n            isDownKeyPressed = false;\n            break;\n\n        case 'ArrowRight':\n            isRightKeyPressed = false;\n            break;\n\n        case ' ':\n            isSpacebarKeyPressed = false;\n            break;\n\n        default:\n            break;\n    }\n};\n\n\ndocument.addEventListener('keydown', handleKeyDownPress);\ndocument.addEventListener('keyup', handleKeyUpPress);\n\n\nfunction draw() {\n    requestAnimationFrame(draw);\n\n    scene.clearRect(0, 0, canvas.width, canvas.height);\n    player.render(scene);\n}\n\ndraw();"],"names":["isRightKeyPressed","isLeftKeyPressed","isUpKeyPressed","isDownKeyPressed","isSpacebarKeyPressed","createJumpAnimation","height","frame","isRunning","movement","animation","step","isFinished","velocity","start","reset","length","Player","constructor","x","y","width","color","baseXVelocity","xVelocity","isJumping","jumpAnimation","gravity","moveLeft","moveRight","render","scene","canvas","fillStyle","fillRect","document","getElementById","getContext","player","handleKeyDownPress","event","key","handleKeyUpPress","addEventListener","draw","requestAnimationFrame","clearRect"],"version":3,"file":"11-platformer-movement.db475d80.js.map"}